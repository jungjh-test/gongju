<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cms.gongju.operation.service.groupMapper">

    <!-- 모든 계정그룹 정보 조회 -->
    <select id="findAllGroups" resultType="map">
        SELECT
            ag.`GROUP_ID` group_id,
            ag.`GROUP_NAME` group_name,
            ag.`GROUP_DESC` group_description,
            COUNT(ma.`MENU_ID`) group_cnt
        FROM
            tb_account_group ag
                LEFT JOIN tb_group_menu_auth ma
                    ON ag.`GROUP_ID` = ma.`GROUP_ID`
                    AND ma.`R` = 'Y'
        WHERE
            ag.`IS_DELETED` = 'N'
        GROUP BY
            ag.`GROUP_ID`, ag.`GROUP_NAME`, ag.`GROUP_DESC`, ag.`REG_ID`, ag.`REG_DT`, ag.`UPD_ID`, ag.`UPD_DT`;
    </select>

    <!-- 모든 계정그룹 정보 개수 조회 -->
    <select id="findAllGroupsCount" resultType="int">
        SELECT count(`GROUP_ID`)
        FROM tb_account_group ag
    </select>

    <!-- 중복 계정그룹ID 체크 -->
    <select id="checkDuplicateId" parameterType="String" resultType="int">
        /* checkDuplicateId */
        SELECT count(`GROUP_ID`)
        FROM tb_account_group
        WHERE BINARY `GROUP_ID` = #{group_id}
    </select>

    <!-- 사용자 정보 등록 -->
    <insert id="createGroupInfo" parameterType="map">
        /* createGroupInfo */
        insert into tb_account_group
        (   GROUP_ID,
            GROUP_NAME,
            GROUP_DESC,
            IS_DELETED,
            REG_ID,
            REG_DT,
            UPD_ID,
            UPD_DT
        )
        values(
            #{groupId},
            #{groupName},
            #{groupDesc},
            'N',
            'admin',
            now(),
            null,
            null
        )
    </insert>

    <update id="deleteGroupInfo" parameterType="String">
        /* deleteGroupInfo */
        update tb_account_group
        set IS_DELETED = 'Y'
        where GROUP_ID = #{groupId}
    </update>
</mapper>